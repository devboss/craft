@charset "UTF-8";
.icon, .widget-mobile__icon:after, .widget-floating__button--close, .widget-floating__button--increase, .widget-floating__button--collapse, .query-field__button--search .query-field__icon, .query-field__button--reset .query-field__icon, .link-to-answer, .sharing__opener, .sharing__item--clipboard .sharing__icon, .sharing__item--clipboard:hover .sharing__icon, .sharing__item--email .sharing__icon, .sharing__item--email:hover .sharing__icon, .sharing__item--facebook .sharing__icon, .sharing__item--facebook:hover .sharing__icon, .sharing__item--twitter .sharing__icon, .sharing__item--twitter:hover .sharing__icon, .feedback-survey__button:before, .feedback-survey__button.feedback-survey__button--active:before, .channeling-bar__icon--1{
  background-image:url("http://localhost:3000/images/css-sprite/sprite.png?8863b7f4ef2549699ed39b5e8716456fd6034152");
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .icon, .widget-mobile__icon:after, .widget-floating__button--close, .widget-floating__button--increase, .widget-floating__button--collapse, .query-field__button--search .query-field__icon, .query-field__button--reset .query-field__icon, .link-to-answer, .sharing__opener, .sharing__item--clipboard .sharing__icon, .sharing__item--clipboard:hover .sharing__icon, .sharing__item--email .sharing__icon, .sharing__item--email:hover .sharing__icon, .sharing__item--facebook .sharing__icon, .sharing__item--facebook:hover .sharing__icon, .sharing__item--twitter .sharing__icon, .sharing__item--twitter:hover .sharing__icon, .feedback-survey__button:before, .feedback-survey__button.feedback-survey__button--active:before, .channeling-bar__icon--1{
    background-image:url("http://localhost:3000/images/css-sprite/sprite@2x.png?f9bb583bb95b619d4a8cb95cc260301f62b037c4");
    background-size:823px 120px;
  }
}

.widget-mobile__header{
  background-image:url("http://localhost:3000/images/backgrounds/cart-assist/floating-widget-mobile-background.png");
  background-size:100%;
  position:relative;
  height:45px;
  z-index:2;
}

@media screen and (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .widget-mobile__header{
    background-image:url("http://localhost:3000/images/backgrounds/cart-assist/floating-widget-mobile-background@2x.png");
  }
}

.widget-mobile__header:before{
  background-image:url("http://localhost:3000/images/backgrounds/cart-assist/wishipedia-title.png");
  background-size:100%;
  width:137px;
  height:47px;
  display:block;
  content:'';
  position:absolute;
  left:50%;
  top:9px;
  margin-left:-69px;
  opacity:0;
  pointer-events:none;
  transition:opacity 0.3s linear;
}

@media screen and (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .widget-mobile__header:before{
    background-image:url("http://localhost:3000/images/backgrounds/cart-assist/wishipedia-title@2x.png");
  }
}

.widget-mobile--expanded .widget-mobile__header:before{
  opacity:1;
}

.widget-mobile__opener{
  font-family:"DovesType", Georgia, serif;
  font-weight:400;
  font-size:1.5rem;
  color:#4e271f;
  padding:0 10px;
  height:45px;
  opacity:1;
  transition:opacity 0.3s linear;
}

.widget-mobile--expanded .widget-mobile__opener{
  opacity:0;
}

.widget-mobile__opener:focus{
  outline:none;
}

.widget-mobile__icon{
  position:absolute;
  right:9px;
  top:9px;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-pack:start;
      -ms-flex-pack:start;
          justify-content:flex-start;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
  width:auto;
  height:auto;
  margin:0;
  background:transparent !important;
  opacity:0;
  transition:opacity 0.3s linear;
  pointer-events:none;
}

.widget-mobile--expanded .widget-mobile__icon{
  opacity:1;
}

.widget-mobile__icon:before{
  font-family:"GillSansMTStd", sans-serif;
  font-weight:400;
  font-style:normal;
  font-size:1rem;
  line-height:1;
  content:'Close';
  display:block;
  margin-right:6px;
  color:#4e271f;
}

.widget-mobile__icon:after{
  content:'';
  display:block;
  background-position:-86px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:30px;
  height:30px;
}

.widget-mobile__main{
  background-image:url("http://localhost:3000/images/backgrounds/cart-assist/floating-widget-mobile-background.png");
  background-size:100%;
  background-position:left -45px;
  background-repeat:repeat-y;
  z-index:1;
}

@media screen and (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .widget-mobile__main{
    background-image:url("http://localhost:3000/images/backgrounds/cart-assist/floating-widget-mobile-background@2x.png");
  }
}

.widget-mobile__content{
  padding-top:6px;
  box-sizing:border-box;
}

[nr-normalize] p{
  font-family:"GillSansMTStd", sans-serif;
  font-weight:300;
  font-size:1rem;
  line-height:1.3125;
  margin-top:0;
  margin-bottom:0.625rem;
}

.widget-floating{
  color:#4e271f;
}

.widget-floating__wrapper{
  background-color:transparent;
  padding:0;
  box-shadow:none;
  transition:width 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955);
}

.widget-floating--state-0 .widget-floating__wrapper{
  width:310px !important;
}

.widget-floating--state-1 .widget-floating__wrapper{
  width:421px !important;
}

.widget-floating--state-2 .widget-floating__wrapper{
  width:421px !important;
}

.widget-floating--state-4 .widget-floating__wrapper{
  width:72px !important;
}

.widget-floating__header{
  background-image:url("http://localhost:3000/images/backgrounds/cart-assist/floating-widget-background-head.png");
  background-size:421px;
  background-position:right top;
  background-repeat:no-repeat;
  position:relative;
  overflow:visible;
  background-color:transparent;
  width:100%;
  height:66px !important;
  padding:0 !important;
  z-index:2;
}

@media screen and (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .widget-floating__header{
    background-image:url("http://localhost:3000/images/backgrounds/cart-assist/floating-widget-background-head@2x.png");
  }
}

.widget-floating__buttons{
  float:none;
  height:30px;
  position:absolute;
  right:37px;
  top:32px;
  padding:0 !important;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-orient:horizontal;
  -webkit-box-direction:reverse;
      -ms-flex-direction:row-reverse;
          flex-direction:row-reverse;
  -webkit-box-pack:start;
      -ms-flex-pack:start;
          justify-content:flex-start;
  -webkit-box-align:start;
      -ms-flex-align:start;
          align-items:flex-start;
}

.widget-floating__button{
  display:block;
  width:30px;
  height:30px;
  padding:0;
  margin:0 2px;
}

.widget-floating__button:focus{
  outline:none;
}

.widget-floating__title{
  background-image:url("http://localhost:3000/images/backgrounds/cart-assist/wishipedia-title.png");
  background-size:137px;
  position:absolute;
  width:137px !important;
  height:47px !important;
  right:160px;
  top:30px;
  margin:0 !important;
  padding:0 !important;
  overflow:hidden;
  text-indent:-9999px;
}

@media screen and (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .widget-floating__title{
    background-image:url("http://localhost:3000/images/backgrounds/cart-assist/wishipedia-title@2x.png");
  }
}

.widget-floating__button--close{
  background-position:-86px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:30px;
  height:30px;
}

.widget-floating__button--increase{
  background-position:-176px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:29px;
  height:30px;
}

.widget-floating--state-2 .widget-floating__button--increase{
  display:none;
}

.widget-floating__button--collapse{
  background-position:-146px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:30px;
  height:30px;
}

.widget-floating__button--hidden{
  display:none;
}

.widget-floating__content{
  background-image:url("http://localhost:3000/images/backgrounds/cart-assist/floating-widget-background-content.png");
  background-size:421px;
  position:relative;
  z-index:1;
  background-color:transparent;
  background-position:right top;
  background-repeat:repeat-y;
  padding-right:36px;
}

@media screen and (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .widget-floating__content{
    background-image:url("http://localhost:3000/images/backgrounds/cart-assist/floating-widget-background-content@2x.png");
  }
}

.core-search{
  margin:0 15px;
}

.core-search__query-field{
  background-color:transparent;
  box-shadow:none;
  padding-bottom:12px;
}

.query-field{
  padding-top:18px;
}

.query-field__inner{
  background:transparent;
  border-bottom:1px solid #4e271f;
}

.query-field__input, .query-field__placeholder{
  font-family:"GillSansMTStd", sans-serif;
  font-weight:400;
  font-size:1rem;
  height:26px !important;
  padding:3px 6px !important;
  color:#4e271f;
}

.query-field__button{
  display:inline-block;
  width:30px;
  height:30px;
  padding:0;
  margin:0 2px;
}

.query-field__button:focus{
  outline:none;
}

.query-field__button:last-child{
  margin-right:0;
}

.query-field__icon{
  margin:0 auto;
}

.query-field__button--search .query-field__icon{
  background-position:-234px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:29px;
  height:30px;
  margin:0;
}

.query-field__button--reset .query-field__icon{
  background-position:-205px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:29px;
  height:30px;
  margin:0;
}

.query-field__suggestions{
  font-family:"GillSansMTStd", sans-serif;
  font-weight:300;
  font-size:1rem;
  line-height:1.25;
  background:transparent;
  box-shadow:none;
  border:none;
}

@media screen and (max-width: 63.9375em){
  .query-field__suggestions{
    padding-top:11px;
  }
}

.query-field__suggestion{
  background:transparent;
  padding:11px 6px;
  cursor:pointer;
  color:#4e271f;
  text-decoration:underline;
}

@media screen and (max-width: 63.9375em){
  .query-field__suggestion{
    position:relative;
    padding-left:0.9em;
  }
  .query-field__suggestion:before{
    content:'›';
    font-weight:700;
    position:absolute;
    display:inline-block;
    left:1px;
    top:11px;
    width:0.9em;
  }
}

@media print, screen and (min-width: 64em){
  .query-field__suggestion{
    padding:10px 6px;
    text-decoration:none;
  }
}

.query-field__suggestion b{
  font-weight:400;
}

.query-field__suggestion.query-field__suggestion--active{
  background-color:rgba(78, 39, 31, 0.1);
}

.answer-header__wrapper{
  box-sizing:border-box;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-pack:justify;
      -ms-flex-pack:justify;
          justify-content:space-between;
  -webkit-box-align:start;
      -ms-flex-align:start;
          align-items:flex-start;
  padding:6px 0 4px;
}

@media print, screen and (min-width: 64em){
  .answer-header__wrapper{
    padding:6px 10px 4px;
  }
}

.answer-header__title{
  width:auto;
  -webkit-box-flex:1;
      -ms-flex:1 1 auto;
          flex:1 1 auto;
  margin-right:8px;
  padding:0;
}

.answer-header__controls{
  -webkit-box-flex:0;
      -ms-flex:0 0 auto;
          flex:0 0 auto;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-pack:end;
      -ms-flex-pack:end;
          justify-content:flex-end;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
  width:auto;
  padding:0;
}

.answer-header__control{
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-pack:center;
      -ms-flex-pack:center;
          justify-content:center;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
  width:30px;
  height:30px;
  margin:0 2px;
}

.answer-header__control > *{
  display:block;
  margin:0;
}

.link-to-answer{
  background-position:-116px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:30px;
  height:30px;
}

.answer-header__title-text-node{
  font-family:"DovesType", Georgia, serif;
  font-weight:400;
  font-size:1.625rem;
  line-height:1.1154;
  color:#4e271f;
}

.sharing__opener{
  background-position:-263px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:26px;
  height:27px;
}

.sharing__drop{
  background-image:url("http://localhost:3000/images/backgrounds/blueprints/faqs-paper.png");
  background-size:1093px;
  background-position:center;
  box-shadow:0 4px 12px 0 rgba(0, 0, 0, 0.53);
  padding:0 4px;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-pack:center;
      -ms-flex-pack:center;
          justify-content:center;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
}

@media screen and (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .sharing__drop{
    background-image:url("http://localhost:3000/images/backgrounds/blueprints/faqs-paper@2x.png");
  }
}

.sharing__corner:before{
  background-image:url("http://localhost:3000/images/backgrounds/blueprints/faqs-paper.png");
  background-size:1093px;
  background-position:center;
}

@media screen and (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
  .sharing__corner:before{
    background-image:url("http://localhost:3000/images/backgrounds/blueprints/faqs-paper@2x.png");
  }
}

.sharing__item{
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-pack:center;
      -ms-flex-pack:center;
          justify-content:center;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
  width:auto;
  height:45px;
  margin:0;
}

.sharing__icon{
  display:block;
  margin:0 6px;
}

.sharing__item--clipboard .sharing__icon, .sharing__item--clipboard:hover .sharing__icon{
  background-position:0px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:32px;
  height:34px;
}

.sharing__item--email .sharing__icon, .sharing__item--email:hover .sharing__icon{
  background-position:-51px -12px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:41px;
  height:31px;
}

.sharing__item--facebook .sharing__icon, .sharing__item--facebook:hover .sharing__icon{
  background-position:0px -89px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:20px;
  height:31px;
}

.sharing__item--twitter .sharing__icon, .sharing__item--twitter:hover .sharing__icon{
  background-position:-92px -12px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:33px;
  height:29px;
}

.answer-list__content .answer-content__inline-form,
.answer-list__content .answer-content__multipage,
.answer-list__content .answer-content__singlepage{
  padding:10px 0;
}

@media print, screen and (min-width: 64em){
  .answer-list__content .answer-content__inline-form,
  .answer-list__content .answer-content__multipage,
  .answer-list__content .answer-content__singlepage{
    padding:10px;
  }
}

.core-search__answer-list,
.core-search__faq,
.core-search__inner-page{
  background:transparent;
}

.answer-list__answer{
  background:transparent;
  box-shadow:none;
}

.answer-list__footer{
  background:transparent;
  box-shadow:none;
}

@media screen and (max-width: 63.9375em){
  .answer-list__footer{
    padding-bottom:10px;
  }
}

.answer-footer{
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-pack:justify;
      -ms-flex-pack:justify;
          justify-content:space-between;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
  background:transparent;
}

.feedback-survey{
  display:-webkit-box !important;
  display:-ms-flexbox !important;
  display:flex !important;
  -webkit-box-pack:start;
      -ms-flex-pack:start;
          justify-content:flex-start;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
  float:none;
  border-bottom:none !important;
  padding:0;
}

.feedback-survey__title, .feedback-survey__thanks{
  font-family:"GillSansMTStd", sans-serif;
  font-weight:400;
  font-size:1rem;
  display:block;
  color:#4e271f;
  margin-right:12px;
}

.feedback-survey__separator{
  display:none;
}

.feedback-survey__button{
  box-sizing:border-box;
  width:40px;
  height:40px;
  margin:0;
  padding:3px 7px 3px 6px;
  color:rgba(255, 255, 255, 0) !important;
}

.feedback-survey__button:before{
  content:'';
  background-position:-32px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:27px;
  height:34px;
}

.feedback-survey__button.feedback-survey__button--active:before{
  background-position:-59px -55px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:27px;
  height:34px;
}

.feedback-survey__button--no:before{
  -webkit-transform:rotate(180deg);
          transform:rotate(180deg);
}

.feedback-dialog__area{
  color:#000;
}

.channeling-bar__wrap:before{
  display:none !important;
}

.channeling-bar__icon--1{
  background-position:-51px -12px;
  background-repeat:no-repeat;
  overflow:hidden;
  display:block;
  width:41px;
  height:31px;
}

.channeling-bar__button:hover .channeling-bar__icon--1,
.channeling-bar__button:focus .channeling-bar__icon--1,
.channeling-bar__item--active .channeling-bar__icon--1{
  background-position:-51px -12px;
}

.channeling-bar__text{
  display:none;
}

.core-search__poweredby{
  display:none;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/